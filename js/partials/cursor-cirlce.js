"use strict";$(document).ready(function(){var t=$(".js-cursor-cirlce");$(".js-animate-cursor").on("mouseenter mousemove",function(e){var a=$(this),s=a.offset().left+t.width()/2,r=a.offset().top+t.height()/2,i=s-e.clientX,n=r-e.clientY,o=-.2;t.css({left:o*i,top:o*n})}).on("mouseleave",function(){t.css({left:0,top:0})}),$(".js-additional-cards").each(function(){var t=$(this);t.on("mouseenter mousemove",function(t){var e=$(this),a=(e.find(".js-blue-back"),e.offset().left+e.width()),s=e.offset().top,r=e.data("left")||0,i=e.data("top")||0,n=a-t.clientX+r,o=s-t.clientY+i;e.find(".js-blue-back").css({right:n,top:-o});var f=e.find("svg");if(f.length){var l=f.offset().left+f.width()/2,v=f.offset().top+f.height()/2,c=l-t.clientX,p=v-t.clientY;if(e.find(".js-move-svg").length){var d=e.find(".js-move-svg-original"),h=parseInt(d.attr("x")),j=parseInt(d.attr("y")),g=.05,m=e.find(".js-move-svg");m.attr("x",h-g*c),m.attr("y",j-g*p)}var u=e.find(".js-move-circle");u.length&&u.each(function(){var t=$(this),e=parseInt(t.attr("jsx")),a=parseInt(t.attr("jsy")),s=.05;t.attr("cx",e-s*c),t.attr("cy",a-s*p)});var x=e.find(".js-move-svg-path");if(x.length){for(var y=x.attr("dcopy"),F=y.split("C").join(" C").split("H").join(" H").split("Z").join(" Z").split(" "),I=.05,b=0,C=[];;)if(0!=F[b].indexOf("M"))if(0!=F[b].indexOf("C"))if(0!=F[b].indexOf("H")){if("Z"==F[b]){C[b]="Z";break}}else{var H=F[b].split("H")[1];C[b]="H"+(parseFloat(H)-I*c),b+=1}else{var Z=F[b].split("C")[1];C[b]="C"+(parseFloat(Z)-I*c),C[b+1]=parseFloat(F[b+1])-I*p,C[b+2]=parseFloat(F[b+2])-I*c,C[b+3]=parseFloat(F[b+3])-I*p,C[b+4]=parseFloat(F[b+4])-I*c,C[b+5]=parseFloat(F[b+5])-I*p,b+=6}else{var k=F[b].split("M")[1];C[b]="M"+(parseFloat(k)-I*c),C[b+1]=parseFloat(F[b+1])-I*p,b+=2}x.attr("d",C.join(" "))}}}).on("mouseleave",function(){var t=$(this);if(t.find(".js-move-svg").length){var e=t.find(".js-move-svg-original"),a=parseInt(e.attr("x")),s=parseInt(e.attr("y")),r=t.find(".js-move-svg");r.attr("x",a),r.attr("y",s)}var i=t.find(".js-move-circle");i.length&&i.each(function(){var t=$(this),e=parseInt(t.attr("jsx")),a=parseInt(t.attr("jsy"));t.attr("cx",e),t.attr("cy",a)});var n=t.find(".js-move-svg-path");if(n.length){var o=n.attr("dcopy");n.attr("d",o)}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
